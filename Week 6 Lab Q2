#include <iostream>

using namespace std;

class Node {
    public:
        int data;
        Node *next;
};

class LinkedListStack {
    private:
        Node *head;
        int size;
        int len;
    public:
        LinkedListStack(int l) {
            len = l;
            head = NULL;
            size = 0;
        }
        
        bool isEmpty() {
            return (size == 0);
        }
        
        bool isFull() {
            return (size == len);
        }
        
        void push(int x) {
            if (isFull()) {
                cout << "Stack Overflow" << endl;
            }
            else {
                Node *newNode = new Node();
                newNode->data = x;
                newNode->next = head;
                head = newNode;
                size++;
            }
        }
        
        void pop() {
            if (isEmpty()) {
                cout << "Stack Underflow" << endl;
            }
            else {
                Node *temp = head;
                head = head->next;
                cout << temp->data << endl;
                delete(temp);
                size--;
            }
        }
        
        int stackTop() {
            if (isEmpty()) {
                cout << "Stack Underflow" << endl;
                return 0;
            }
            else {
                return head->data;
            }
        }
        
        void display() {
            if (isEmpty()) {
                cout << "Stack is Empty" << endl;
            }
            else {
                Node *temp = head;
                while (temp != NULL) {
                    cout << temp->data << " ";
                    temp = temp->next;
                }
                cout << endl;
            }
        }
};

int main() {
    int len;
    cout << "Enter the stack length : ";
    cin >> len;
    LinkedListStack s(len);
    s.pop();
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);
    s.push(60);
    s.push(70);
    s.push(80);
    s.push(90);
    s.push(100);
    s.push(110);
    cout << s.stackTop() << endl;
    s.pop();
    cout << s.stackTop() << endl;
    s.display();
    return 0;
}
