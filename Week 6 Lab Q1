#include <iostream>

using namespace std;

class Stack {
    private:
        int *arr;
        int size;
        int top;
    public:
        Stack(int s) {
            size = s;
            arr = new int[size];
            top = -1;
        }
        
        bool isEmpty() {
            return (top == -1);
        }
        
        bool isFull() {
            return (top == size-1);
        }
        
        void push(int x) {
            if (isFull()) {
                cout << "Stack Overflow" << endl;
            }
            else {
                top++;
                arr[top] = x;
            }
        }
        
        void pop() {
            if (isEmpty()) {
                cout << "Stack Underflow" << endl;
            }
            else {
                top--;
                cout << arr[top+1] << endl;
            }
        }
        
        int stackTop() {
            if (isEmpty()) {
                cout << "Stack Underflow" << endl;
                return 0;
            }
            else {
                return arr[top];
            }
        }
        
        void display() {
            if (isEmpty()) {
                cout << "Stack is Empty" << endl;
            }
            else {
                for (int i = top; i >= 0; i--) {
                    cout << arr[i] << " ";
                }
                cout << endl;
            }
        }
};

int main() {
    int len;
    cout << "Enter the stack length : ";
    cin >> len;
    Stack s(len);
    s.pop();
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);
    s.push(60);
    s.push(70);
    s.push(80);
    s.push(90);
    s.push(100);
    s.push(110);
    cout << s.stackTop() << endl;
    s.pop();
    cout << s.stackTop() << endl;
    s.display();
    return 0;
}
